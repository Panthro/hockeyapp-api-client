#import <Foundation/Foundation.h>
#import "SWGApps.h"
#import "SWGApp.h"
#import "SWGApi.h"

/**
* Hockeyapp Public API wrapper
* No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
*
* OpenAPI spec version: 0.0.2
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGDefaultApi: NSObject <SWGApi>

extern NSString* kSWGDefaultApiErrorDomain;
extern NSInteger kSWGDefaultApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// 
/// Gets `Apps`. 
///
/// 
///  code:200 message:"Successful response",
///  code:400 message:"Bad request"
///
/// @return SWGApps*
-(NSNumber*) appsGetWithCompletionHandler: 
    (void (^)(SWGApps* output, NSError* error)) handler;


/// 
/// Upload a new app
///
/// @param ipa file data of the .ipa for iOS, .app.zip for OS X, or .apk file for Android
/// @param dsym file data of the .dSYM.zip file (iOS and OS X) or mapping.txt (Android); note that the extension has to be .dsym.zip (case-insensitive) for iOS and OS X and the file name has to be mapping.txt for Android. (optional)
/// @param notes release notes as Textile or Markdown (after 5k characters note are truncated) (optional)
/// @param notesType type of release notes. &#x60;0&#x60; for Textile, &#x60;1&#x60; for Markdown (optional)
/// @param notify notify testers (can only be set with full-access tokens). &#x60;0&#x60; to not notify, &#x60;1&#x60; to notify all testers that can install this app,  &#x60;2&#x60; to notify all testers (optional)
/// @param status download status (can only be set with full-access tokens). &#x60;1&#x60; to not allow users to download the version, &#x60;2&#x60; to make the version available for download (optional)
/// @param strategy replace or add build with same build number. &#x60;add&#x60; to add the build as a new build to even if it has the same build number __default__, &#x60;replace&#x60; to replace to a build with the same build number (optional)
/// @param tags restrict download to comma-separated list of tags (optional)
/// @param teams restrict download to comma-separated list of team IDs (optional)
/// @param users restrict download to comma-separated list of user IDs (optional)
/// @param mandatory set version as mandatory &#x60;0&#x60; for not mandatory __default__, &#x60;1&#x60; for mandatory (optional)
/// @param releaseType set the release type of the app. &#x60;0&#x60; for beta __default__  &#x60;1&#x60; for store &#x60;2&#x60; for alpha &#x60;3&#x60; for enterprise (optional)
/// @param private set to &#x60;true&#x60; to enable the private download page (default is &#x60;true&#x60;) (optional)
/// @param ownerId set to the ID of your organization (optional)
/// @param commitSha set to the git commit sha for this build (optional)
/// @param buildServerUrl set to the URL of the build job on your build server (optional)
/// @param repositoryUrl set to your source repository (optional)
/// 
///  code:201 message:"Upload success",
///  code:400 message:"Bad request"
///
/// @return SWGApp*
-(NSNumber*) appsUploadPostWithIpa: (NSURL*) ipa
    dsym: (NSURL*) dsym
    notes: (NSString*) notes
    notesType: (NSNumber*) notesType
    notify: (NSNumber*) notify
    status: (NSNumber*) status
    strategy: (NSString*) strategy
    tags: (NSArray<NSString*>*) tags
    teams: (NSArray<NSNumber*>*) teams
    users: (NSArray<NSNumber*>*) users
    mandatory: (NSNumber*) mandatory
    releaseType: (NSNumber*) releaseType
    private: (NSNumber*) private
    ownerId: (NSNumber*) ownerId
    commitSha: (NSString*) commitSha
    buildServerUrl: (NSString*) buildServerUrl
    repositoryUrl: (NSString*) repositoryUrl
    completionHandler: (void (^)(SWGApp* output, NSError* error)) handler;



@end
