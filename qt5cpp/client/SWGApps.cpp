/**
 * Hockeyapp Public API wrapper
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGApps.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGApps::SWGApps(QString* json) {
    init();
    this->fromJson(*json);
}

SWGApps::SWGApps() {
    init();
}

SWGApps::~SWGApps() {
    this->cleanup();
}

void
SWGApps::init() {
    success = new QString("");
apps = new QList<SWGApps_apps*>();
}

void
SWGApps::cleanup() {
    if(success != NULL) {
        delete success;
    }
if(apps != NULL) {
        QList<SWGApps_apps*>* arr = apps;
        foreach(SWGApps_apps* o, *arr) {
            delete o;
        }
        delete apps;
    }
}

SWGApps*
SWGApps::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGApps::fromJsonObject(QJsonObject &pJson) {
    setValue(&success, pJson["success"], "QString", "QString");
setValue(&apps, pJson["apps"], "QList", "SWGApps_apps");
}

QString
SWGApps::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGApps::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    
    toJsonValue(QString("success"), success, obj, QString("QString"));
    
        

    
    QList<SWGApps_apps*>* appsList = apps;
    QJsonArray appsJsonArray;
    toJsonArray((QList<void*>*)apps, &appsJsonArray, "apps", "SWGApps_apps");

    obj->insert("apps", appsJsonArray);
    

    return obj;
}

QString*
SWGApps::getSuccess() {
    return success;
}
void
SWGApps::setSuccess(QString* success) {
    this->success = success;
}

QList<SWGApps_apps*>*
SWGApps::getApps() {
    return apps;
}
void
SWGApps::setApps(QList<SWGApps_apps*>* apps) {
    this->apps = apps;
}



} /* namespace Swagger */

