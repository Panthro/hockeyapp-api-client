/* 
 * Hockeyapp Public API wrapper
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        
        /// <summary>
        /// Test AppsGet
        /// </summary>
        [Test]
        public void AppsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.AppsGet();
            //Assert.IsInstanceOf<Apps> (response, "response is Apps");
        }
        
        /// <summary>
        /// Test AppsUploadPost
        /// </summary>
        [Test]
        public void AppsUploadPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream ipa = null;
            //System.IO.Stream dsym = null;
            //string notes = null;
            //int? notesType = null;
            //int? notify = null;
            //int? status = null;
            //string strategy = null;
            //List<string> tags = null;
            //List<int?> teams = null;
            //List<int?> users = null;
            //int? mandatory = null;
            //int? releaseType = null;
            //bool? _private = null;
            //int? ownerId = null;
            //string commitSha = null;
            //string buildServerUrl = null;
            //string repositoryUrl = null;
            //var response = instance.AppsUploadPost(ipa, dsym, notes, notesType, notify, status, strategy, tags, teams, users, mandatory, releaseType, _private, ownerId, commitSha, buildServerUrl, repositoryUrl);
            //Assert.IsInstanceOf<App> (response, "response is App");
        }
        
    }

}
